Description: >
    This script deploys security groups and servers 

  
Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

Resources:

    WebServerSecurityGroup: 
        Type: AWS::EC2::SecurityGroup
        Properties:
             GroupDescription: Allow http to our hosts and ssh from local only
             VpcId:
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"
             SecurityGroupIngress:
                CidrIp: 0.0.0.0/0
                FromPort: 8080
                IpProtocol: tcp
                ToPort: 8080
                IpProtocol: tcp
                FromPort: 22
                ToPort: 22
             SecurityGroupEgress:
                CidrIp: 0.0.0.0/0
                FromPort: 0
                IpProtocol: tcp
                ToPort: 65535
    LBSecGroup: 
        Type: AWS::EC2::SecurityGroup
        Properties:
             GroupDescription: Allow http to our hosts and ssh from local only
             VpcId:
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"
             SecurityGroupIngress:
                CidrIp: 0.0.0.0/0
                FromPort: 80
                IpProtocol: tcp
                ToPort: 80
                IpProtocol: tcp
             SecurityGroupEgress:
                CidrIp: 0.0.0.0/0
                FromPort: 80
                IpProtocol: tcp
                ToPort: 80

    WebAppLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
        UserData:
            Fn::Base64: !Sub |
            #!/bin/bash
            apt-get update -y
            apt-get install unzip awscli -y
            apt-get install apache2 -y
            systemctl start apache2.service
            cd /var/www/html
            aws s3 cp s3://udacity-demo-1/udacity.zip .
            unzip -o udacity.zip
        ImageId: ami-005bdb005fb00e791
        KeyName: that-one
        IamInstanceProfile: !Ref ProfileWithRolesForOurApp
        SecurityGroups:
        - Ref: WebServerSecurityGroup
        InstanceType: t3.small
        BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
            Ebs:
                VolumeSize: '10'
    WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIndentifier:
                -Fn::!ImportValue:
                    !Sub "${EnvironmentName}-PRIV-NETS"
            LaunchConfigurationName:
                Ref:WebAppLaunchConfig
            MinSize: '3'
            MaxSize: '5'
    
    WebAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 35
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 30
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 5
        VpcId: 
            Fn::ImportValue:
            Fn::Sub: "${EnvironmentName}-VPCID"
